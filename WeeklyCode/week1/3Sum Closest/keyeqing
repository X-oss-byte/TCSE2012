class Solution {
public:
    int threeSumClosest(vector<int> &num, int target) {
        if(num.size() == 0) return 0;  
        if(num.size() == 1) return num[0];  
        if(num.size() == 2) return num[0] + num[1]; 
        sort(num.begin(),num.end());
        int closest=num[0]+num[1]+num[2];
        int dif=abs(closest-target);
        for(int i=0;i<num.size()-2;i++){
            if(abs(twoSumClosest(num,target-num[i],i)+num[i]-target)<dif){
                dif=abs(twoSumClosest(num,target-num[i],i)+num[i]-target);
                closest=twoSumClosest(num,target-num[i],i)+num[i];
            }
        }
        return closest;
    }
    int twoSumClosest(vector<int> &num,int target,int third){
        int first=third+1,second=num.size()-1;
        int closest=num[first]+num[second];
        while(first<second){
            if(num[first]+num[second]==target){
                return target;
            }
            else if(num[first]+num[second]>target){
                if(abs(num[first]+num[second]-target)<abs(closest-target))
                    closest=num[first]+num[second];
                second--;
            }
            else{
                if(abs(num[first]+num[second]-target)<abs(closest-target))
                    closest=num[first]+num[second];
                first++;
            }
        }
        return closest;
    }
};
